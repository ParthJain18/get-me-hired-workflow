name: Job Scraping Daily Run

on:
  workflow_dispatch:
  schedule:
    - cron: "30 4 */2 * *" # Every 2 days at 10:00 IST

jobs:
  run-job-scraping:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore persisted state
        id: restore-state
        uses: actions/cache/restore@v4
        with:
          path: |
            processed_jobs.json
            parsed_resume.json
          key: state-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            state-${{ runner.os }}-

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        uses: astral-sh/setup-uv@v1
      - name: Cache sentence-transformers models
        uses: actions/cache@v4
        with:
          path: ~/.cache/torch/sentence_transformers
          key: ${{ runner.os }}-sentencetransformers-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-sentencetransformers-
      - name: Install dependencies with uv
        run: uv sync

      - name: Install TeX Live
        uses: TeX-Live/setup-texlive-action@v3
        with:
          packages: |
            scheme-basic
            collection-fontsrecommended
            collection-latexextra
            roboto

      - name: Create .env from repository secrets
        run: |
          cat > .env <<EOF
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          ZYTE_API_KEY=${{ secrets.ZYTE_API_KEY }}
          EMAIL_SMTP_HOST=${{ secrets.EMAIL_SMTP_HOST }}
          EMAIL_SMTP_PORT=${{ secrets.EMAIL_SMTP_PORT }}
          EMAIL_SENDER_ADDRESS=${{ secrets.EMAIL_SENDER_ADDRESS }}
          EMAIL_SENDER_PASSWORD=${{ secrets.EMAIL_SENDER_PASSWORD }}
          EMAIL_TO=${{ secrets.EMAIL_TO }}
          EOF
        shell: bash
      - name: Ensure processed_jobs.json exists
        run: |
          if [ ! -f processed_jobs.json ]; then
            echo "[]" > processed_jobs.json
            echo "Created empty processed_jobs.json"
          fi
        shell: bash
      - name: Run AI Job Application Assistant
        run: uv run python main.py
        shell: bash
      - name: Upload tracker artifact
        uses: actions/upload-artifact@v4
        with:
          name: processed-jobs-tracker
          path: processed_jobs.json
      - name: Upload parsed resume artifact
        uses: actions/upload-artifact@v4
        with:
          name: parsed-resume
          path: parsed_resume.json
      - name: Prepare files for state cache
        if: always()
        run: |
          if [ ! -f processed_jobs.json ]; then
            echo "[]" > processed_jobs.json
          fi
          if [ ! -f parsed_resume.json ]; then
            echo "{}" > parsed_resume.json
          fi
        shell: bash
      - name: Persist state to cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            processed_jobs.json
            parsed_resume.json
          key: state-${{ runner.os }}-${{ github.run_id }}